# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def buildTree(self, preorder, inorder):
        """
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """
        def build(left, right):
            if left > right: return None
            
            root = TreeNode(preorder[self.pre_idx])
            
            self.pre_idx += 1
            
            root.left = build(left, inorder_map[root.val] - 1)
            root.right = build(inorder_map[root.val] + 1, right)
            
            return root
        
        self.pre_idx = 0
        
        inorder_map = {}
        for idx, val in enumerate(inorder):
            inorder_map[val] = idx
            
        return build(0, len(preorder)-1)
