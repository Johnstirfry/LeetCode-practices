# Brute force O(n^2)
class Solution(object):
    def canJump(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        if len(nums) <= 1: return True
        
        dp = [0] * len(nums)
        dp[len(nums)-1] = 1
        
        for i in range(len(nums)-2, -1, -1):
            if nums[i] >= len(nums) - i - 1:
                dp[i] = 1
            else:
                for j in range(i+nums[i], i-1, -1):
                    if dp[j] == 1:
                        dp[i] = 1
                        break
        return dp[0]

# Linear solution: m為目前能夠走到的距離，若是loop超越m，代表無法走到
class Solution(object):
    def canJump(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        m = 0
        for i, n in enumerate(nums):
            if i > m: return False
            m = max(m, i+n)
        return True
