/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(!head || !head->next) return;
        // push everything into stack and get total size
        ListNode* node = head;
        stack<ListNode*> myStack;
        int size = 0;
        while(node){
            myStack.push(node);
            size++;
            node = node->next;
        }
        
        node = head;
        ListNode* tmp;
        for(int i = 0; i < size/2; i++){
            tmp = node->next;
            node->next = myStack.top();
            myStack.pop();
            node->next->next = tmp;
            node = tmp;
        }
        node->next = nullptr;
    }
};
