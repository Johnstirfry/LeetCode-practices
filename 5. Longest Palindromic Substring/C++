class Solution {
public:
    string longestPalindrome(string s) {
        int maxlen = 0;
        int l, r;
        pair<int, int> res;
        
        for(int i = 0; i < s.length(); i++){
            // 1 center
            l = r = i;
            while(l >= 0 && r < s.length() && s[l] == s[r]){
                if(r - l + 1 > maxlen){
                    maxlen = r - l + 1;
                    res = {l, r};
                }
                l--;
                r++;
            }
            
            // 2 center 不用考慮三個因為會被下一個1 center考慮到
            l = i;
            r = i + 1;
            while(l >= 0 && r < s.length() && s[l] == s[r]){
                if(r - l + 1 > maxlen){
                    maxlen = r - l + 1;
                    res = {l, r};
                }
                l--;
                r++;
            }
        }
        return s.substr(res.first, res.second - res.first + 1);
    }
};
