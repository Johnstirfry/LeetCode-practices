class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        if(intervals.empty()) return {newInterval};
        
        // find intervals that will be effected
        int start = 0;
        while(start < intervals.size() && intervals[start][1] < newInterval[0]){
            start++;
        }
        int end = intervals.size() - 1; 
        while(end > 0 && intervals[end][0] > newInterval[1]){
            end--;
        }
        
        if(start < intervals.size()){
            if(newInterval[1] < intervals[start][0]){
                intervals.insert(intervals.begin() + start, newInterval);
                return intervals;
            }
            newInterval[0] = min(newInterval[0], intervals[start][0]);
            newInterval[1] = max(newInterval[1], intervals[end][1]);
            intervals.erase(intervals.begin() + start, intervals.begin() + end + 1);
            intervals.insert(intervals.begin() + start, newInterval);
        }
        else{
            intervals.push_back(newInterval);
        }
        return intervals;
    }
};
